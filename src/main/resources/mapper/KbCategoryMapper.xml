<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxdou.snowai.mapper.KbCategoryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.dxdou.snowai.domain.entity.KbCategory">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="parent_id" property="parentId" />
        <result column="sort" property="sort" />
        <result column="creator_id" property="creatorId" />
        <result column="status" property="status" />
        <result column="deleted" property="deleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 分类VO映射结果 -->
    <resultMap id="CategoryVOMap" type="com.dxdou.snowai.domain.vo.KbCategoryVO">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="parent_id" property="parentId" />
        <result column="sort" property="sort" />
        <result column="creator_id" property="creatorId" />
        <result column="creator_name" property="creatorName" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="document_count" property="documentCount" />
    </resultMap>

    <!-- 分页查询分类列表 -->
    <select id="selectCategoryList" resultMap="CategoryVOMap"> SELECT c.*, u.nickname as
        creator_name, (SELECT COUNT(*) FROM kb_document d WHERE d.category_id = c.id AND d.deleted =
        0) as document_count FROM kb_category c LEFT JOIN sys_user u ON c.creator_id = u.id WHERE
        c.deleted = 0
            <if
            test="name != null and name != ''"> AND c.name LIKE CONCAT('%', #{name}, '%') </if>
            <if
            test="status != null"> AND c.status = #{status} </if> ORDER BY c.sort ASC, c.create_time
        DESC </select>

    <!-- 根据ID查询分类信息 -->
    <select id="selectCategoryById" resultMap="CategoryVOMap"> SELECT c.*, u.nickname as
        creator_name, (SELECT COUNT(*) FROM kb_document d WHERE d.category_id = c.id AND d.deleted =
        0) as document_count FROM kb_category c LEFT JOIN sys_user u ON c.creator_id = u.id WHERE
        c.id = #{id} AND c.deleted = 0 </select>

    <!-- 查询知识库的所有分类 -->
    <select id="selectCategoryListByKbId" resultMap="CategoryVOMap"> SELECT c.*, u.nickname as
        creator_name, (SELECT COUNT(*) FROM kb_document d WHERE d.category_id = c.id AND d.deleted =
        0) as document_count FROM kb_category c LEFT JOIN sys_user u ON c.creator_id = u.id WHERE
        c.deleted = 0 AND c.status = 1 ORDER BY c.sort ASC, c.create_time DESC </select>

    <!-- 查询分类树 -->
    <select id="selectCategoryTree" resultMap="CategoryVOMap"> WITH RECURSIVE category_tree AS (
        SELECT c.id, c.parent_id, c.name, c.sort, c.create_time, c.update_time, CASE WHEN
        EXISTS(SELECT 1 FROM kb_category WHERE parent_id = c.id AND deleted = 0) THEN 1 ELSE 0 END
        as has_children FROM kb_category c WHERE c.deleted = 0 AND c.parent_id = 0
        UNION ALL SELECT c.id, c.parent_id, c.name, c.sort, c.create_time,
        c.update_time, CASE WHEN EXISTS(SELECT 1 FROM kb_category WHERE parent_id = c.id AND deleted
        = 0) THEN 1 ELSE 0 END as has_children FROM kb_category c INNER JOIN category_tree ct ON
        c.parent_id = ct.id WHERE c.deleted = 0 ) SELECT * FROM category_tree ORDER BY sort ASC </select>

    <!-- 查询子分类列表 -->
    <select id="selectChildren" resultMap="CategoryVOMap"> SELECT c.id, c.parent_id, c.name, c.sort,
        c.create_time, c.update_time, CASE WHEN EXISTS(SELECT 1 FROM kb_category WHERE
        parent_id = c.id AND deleted = 0) THEN 1 ELSE 0 END as has_children FROM kb_category c WHERE
        c.parent_id = #{parentId} AND c.deleted = 0 ORDER BY c.sort ASC </select>

    <!-- 查询分类及其所有子分类ID -->
    <select id="selectCategoryAndChildren" resultType="java.lang.Long"> WITH RECURSIVE category_tree
        AS ( SELECT id FROM kb_category WHERE id = #{categoryId} AND deleted = 0 UNION ALL SELECT
        c.id FROM kb_category c INNER JOIN category_tree ct ON c.parent_id = ct.id WHERE c.deleted =
        0 ) SELECT id FROM category_tree </select>

</mapper>